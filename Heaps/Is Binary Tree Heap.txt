class Solution {
    private:
    int TotalCount(struct Node* root)
    {
        if(root == NULL)
        return 0;
        
        int ans = 1 + TotalCount(root->left) + TotalCount(root->right);
        return ans;
    }
    
    bool isCBT(struct Node* root , int i , int cnt)
    {
        if(root == NULL)
        return true;
        
        if(i>=cnt)
        return false;
        
        bool left = isCBT(root->left , i*2+1, cnt);
        bool right= isCBT(root->right, i*2+2, cnt);
        
        return (left&&right);
    }
    
    bool isMaxOrder(struct Node* root)
    {
        if(root->left == NULL && root->right == NULL)
        return true;
        
        if(root->right == NULL && root->left != NULL)
        {
            return root->data > root->left->data;
        }
       else
          {  bool left = isMaxOrder(root->left);
             bool right = isMaxOrder(root->right);
             
return (left && right && root->data > root->left->data && root->data>root->right->data);
             
          }
    
    }
  public:
    bool isHeap(struct Node* root) {
        
        // is CBT && is maxOrder
        
        int count = TotalCount(root);
        int index = 0;
        
        if(isCBT(root,index,count) && isMaxOrder(root))
        return true;
        else
        return false;
    }
};