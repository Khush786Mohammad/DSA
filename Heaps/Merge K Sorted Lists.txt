class compare
{
    public:
    
    bool operator() (auto *a , auto *b)
    {
        return a->data > b->data;
    }
};

class Solution{
  public:
    //Function to merge K sorted linked list.
    Node * mergeKLists(Node *arr[], int K)
    {
           priority_queue<Node*,vector<Node*>,compare> pq;
           
           //step1: push all the firt node value of LL
           
           for(int i = 0 ; i<K ; i++)
           {
               if(arr[i] != NULL)
               {
                   pq.push(arr[i]);
               }
           }
           Node* head = NULL;
           Node* tail = NULL;
           
           while(!pq.empty())
           {
               Node *temp = pq.top();
               pq.pop();
               
               if(head == NULL)
               {
                   head = temp;
                   tail = temp;
                   if(head -> next != NULL)
                   {
                       pq.push(head->next);
                   }
               }
               else
               {
                   tail->next = temp;
                   tail = temp;
                   
                   if(tail->next != NULL)
                   {
                       pq.push(tail->next);
                   }
               }
               
           }
           return head;
    }
};