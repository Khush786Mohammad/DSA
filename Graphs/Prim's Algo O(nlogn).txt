class Solution
{
	public:
	//Function to find sum of weights of edges of the Minimum Spanning Tree.
    int spanningTree(int V, vector<vector<int>> adj[])
    {
        // O(n*logn)
        
        vector<bool> visited(V,false);
        vector<int> parent(V,-1);
        
        int sum = 0;
        
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
        
        // {wt,node}
        pq.push({0,0});
        
        while(!pq.empty())
        {
            auto it = pq.top();
            pq.pop();
            
            int wt = it.first;
            int Node = it.second;
            
            if(!visited[Node])
            {
                visited[Node] = 1;
                sum += wt;
                
                // traverse the adjacent neighbours
                
                for(auto itr : adj[Node])
                {
                    int nodeValue = itr[0];
                    int wt = itr[1]; 
                    
                    if(!visited[nodeValue])
                    {
                        parent[nodeValue] = Node;
                        pq.push({wt,nodeValue});
                    }
                }
            }
        }
        return sum;
    }
};