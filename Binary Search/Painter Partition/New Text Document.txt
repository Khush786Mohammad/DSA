class Solution
{
    private:
    long long isPossible(int arr[],int n , int time)
    {
        int cntPainters = 1;
        int last = 0;
        
        for(int i = 0 ; i<n ; i++)
        {
            if(arr[i]+last <= time)
            {
                last += arr[i];
                continue;
            }
            else
            {
                cntPainters++;
                last = arr[i];
            }
        }
        return cntPainters;
    }
  public:
    long long minTime(int arr[], int n, int k)
    {
        int low = -1;
        long long int high = 0;
        
        for(int i = 0 ; i<n ; i++)
        {
            low = max(low,arr[i]);
            high += arr[i];
        }
        
        long long int ans = 0;
        while(low <= high)
        {
            long long int mid = low + (high-low)/2;
            long long int painters = isPossible(arr,n,mid);
            if(painters > k)
            {
                low = mid+1;
            }
            else
            {
                high = mid-1;
            }
        }
        return low;
    }
};