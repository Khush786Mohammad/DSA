bool subsetSumToK(int n, int k, vector<int> &arr) {
    int ind = n-1;
    // vector<vector<int>> dp(n,vector<int>(k+1,-1));
    // return solve(ind,n,k,arr,dp);
    vector<vector<bool>> dp(n,vector<bool>(k+1,false));
    for(int i = 0 ; i<n ; i++)
    {
        dp[i][0] = true;
    }
    dp[0][arr[0]] = true;

    for(int i = 1 ; i<n ; i++)
    {
        for(int target = 1; target<=k; target++)
        {
            bool notPick = dp[i-1][target];
            bool pick = false;
            if(target >= arr[i])
            pick = dp[i-1][target-arr[i]];

            dp[i][target] = notPick || pick;
        }
    }
    return dp[n-1][k];
}