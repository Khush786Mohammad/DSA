class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& matrix) {
        int n = matrix.size();
        vector<vector<int>> dp(n,vector<int>(n,0));

        int ans = INT_MAX;

        for(int i = 0 ; i<n ; i++)
        {
            dp[0][i] = matrix[0][i];
            if(n == 1)
            ans = min(ans,dp[0][i]);
        }

        for(int i = 1 ; i<n ; i++)
        {
            for(int j = 0 ; j<n ; j++)
            {
                int down = dp[i-1][j];
                int upLeft = INT_MAX;
                if(j > 0) upLeft = dp[i-1][j-1];
                int upRight = INT_MAX;
                if(j<n-1) upRight = dp[i-1][j+1];

                dp[i][j] = min(down,min(upLeft,upRight)) + matrix[i][j];
                if(i == n-1)
                ans = min(ans,dp[i][j]);
            }
        }
        return ans;
    }
};